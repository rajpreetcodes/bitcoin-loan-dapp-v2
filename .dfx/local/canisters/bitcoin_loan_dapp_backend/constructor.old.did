type Result = variant { Ok : nat64; Err : text };
type Result_1 = variant { Ok : null; Err : text };
type LoanStatus = variant { Active; Repaid };
type Loan = record {
  id : nat64;
  borrower : principal;
  collateral_amount : nat64;
  loan_amount : nat64;
  status : LoanStatus;
};
type LoanReference = record {
  id : nat64;
  ipfs_hash : text;
  borrower : principal;
  status : LoanStatus;
};

service : {
  create_loan : (nat64, nat64) -> (Result);
  repay_loan : (nat64) -> (Result_1);
  get_loan : (nat64) -> (variant { Ok : Loan; Err : text });
  get_loan_refs_by_borrower : (principal) -> (vec LoanReference) query;
  get_stats : () -> (nat64, nat64) query;
  whoami : () -> (principal) query;
  link_btc_address : (text) -> (Result_1);
  get_linked_btc_address : () -> (opt text) query;
}
